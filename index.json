[{"categories":["环境配置备忘录"],"content":"搭建conda虚拟环境命令 最近尝试使用conda搭建python虚拟环境，这里记录一些常用的命令。 # 创建虚拟环境 conda create -n your_virtual_environment_name python=your_python_version # 删除虚拟环境 conda remove -n your_virtual_environment_name --all # 激活虚拟环境 conda activate your_virtual_environment_name # 关闭当前虚拟环境 conda deactivate # 在指定虚拟环境中安装包 conda install -n your_virtual_environment_name [package] # 在当前虚拟环境中安装包 conda install [package] # 查看安装了哪些包 conda list 在pycharm中可以指定使用conda虚拟环境 位置为settings-\u003eproject-\u003epython interpreter 然后在添加解释器中可以找到创建的conda虚拟环境。 ","date":"2021-11-13","objectID":"/posts/conda-pip-install/:1:0","tags":["环境配置"],"title":"Conda 虚拟环境中使用pip安装包","uri":"/posts/conda-pip-install/"},{"categories":["环境配置备忘录"],"content":"在虚拟环境中使用pip安装包 虚拟环境搭建好之后出现了另一个问题，有些包无法使用conda install命令安装，这时我想到能不能在虚拟环境中使用pip进行安装呢？先试了一下pip list命令，发现列出的是本地环境中的包，而不是虚拟环境中的。在虚拟环境中pip install了一下果然装进了本地环境中。 在网上找了挺长时间，终于找到能用的方法，这里记录一下 需要更改当前虚拟环境中的site.py文件，路径是your_virtual_environment_path/lib/python.version/site.py 原本的内容为 USER_SITE = None USER_BASE = None 更改为 USER_SITE = your_virtual_environment_path/lib/python.version/site-packages USER_BASE = your_virtual_environment_path ","date":"2021-11-13","objectID":"/posts/conda-pip-install/:2:0","tags":["环境配置"],"title":"Conda 虚拟环境中使用pip安装包","uri":"/posts/conda-pip-install/"},{"categories":["MPC"],"content":"之前做MPC相关的基本都是理论上的东西，效率很差，感觉也没有实现的必要。 最近几年基于秘密分享的MPC方案效率很高，有很多人用这个来做机器学习框架(PPML)，实际的实现方案变多了。 但还是想吐槽一些有些论文不给出代码实现😠。 ","date":"2021-10-31","objectID":"/posts/mpc-implementation/:0:0","tags":["MPC","Implementation"],"title":"MPC 实现方案归纳","uri":"/posts/mpc-implementation/"},{"categories":["MPC"],"content":"两方实现方案(2 PC) ABY DNSS15 - “ABY – A Framework for Efficient Mixed-Protocol Secure Two-Party Computation” 通用安全多方计算框架，基于算数分享(arithmetic)，二进制分享(binary)，混淆电路(garble circuit)三者之间的转换，解决非线性函数的计算问题。 ","date":"2021-10-31","objectID":"/posts/mpc-implementation/:1:0","tags":["MPC","Implementation"],"title":"MPC 实现方案归纳","uri":"/posts/mpc-implementation/"},{"categories":["MPC"],"content":"三方实现方案(3 PC) ABY3 CCS18 - “ABY3: A Mixed Protocol Framework for Machine Learning” 基于ABY方案的转换思想，诚实方占多数的安全假设，半诚实安全的乘法无需乘法triple，性能提升很大。 SecureNN (PETS 2019) - “SecureNN: 3-Party Secure Computation for Neural Network Training” 由两方完成计算过程，引入协作参与方进行triple等随机量的生成，方案中比较协议比较复杂，存在可优化余地。 Falcon (PETS 2021) - “Falcon: Honest-Majority Maliciously Secure Framework for Private Deep Learning” SecureNN方案与ABY3方案的结合，应该是目前最好的三方计算框架。 TF-encrypted - “Private Machine Learning in TensorFlow using Secure Computation” 基于TensorFlow实现PPML中常见的各种运算。 CrypTen - “CRYPTEN: Secure Multi-Party Computation Meets Machine Learning” Facebook基于Pytorch实现的PPML机器学习框架，支持机器学习中常见的各种运算，学习成本低。 ","date":"2021-10-31","objectID":"/posts/mpc-implementation/:2:0","tags":["MPC","Implementation"],"title":"MPC 实现方案归纳","uri":"/posts/mpc-implementation/"},{"categories":["MPC"],"content":"SPDZ方案实现 SPDZ family - “Multiparty Computation from Somewhat Homomorphic Encryption” 实现了SPDZ及其衍生出的多种协议，支持各种安全性假设 ","date":"2021-10-31","objectID":"/posts/mpc-implementation/:3:0","tags":["MPC","Implementation"],"title":"MPC 实现方案归纳","uri":"/posts/mpc-implementation/"},{"categories":["MPC"],"content":"常用密码学工具 libOTe - 基于C++实现的OT协议库，包含各种常用的OT协议及OT扩展协议 EMP-tookit - 包含MPC中常用的密码学工具：OT，zero knowledge proof等，以及一些两方计算协议的实现 ","date":"2021-10-31","objectID":"/posts/mpc-implementation/:4:0","tags":["MPC","Implementation"],"title":"MPC 实现方案归纳","uri":"/posts/mpc-implementation/"},{"categories":null,"content":"🚩关于这个网站 主要用来记录学习过程中的一些知识点，可能会有一些无聊的东西 感觉自己有点懒😪，更新应该不会很频繁 ","date":"2021-10-31","objectID":"/about/:1:0","tags":null,"title":"About Me","uri":"/about/"},{"categories":null,"content":"👦关于我 哈尔滨工业大学🏫在读研究生 密码学: MPC, PPML AI安全: membership inference 老二次元🚀 ","date":"2021-10-31","objectID":"/about/:2:0","tags":null,"title":"About Me","uri":"/about/"},{"categories":null,"content":"📭关于联系方式 github@zjn-code ","date":"2021-10-31","objectID":"/about/:3:0","tags":null,"title":"About Me","uri":"/about/"}]